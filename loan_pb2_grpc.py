# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import loan_pb2 as loan__pb2


class QuikLoanerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.save_loan = channel.unary_unary(
                '/QuikLoaner/save_loan',
                request_serializer=loan__pb2.createLoanRequest.SerializeToString,
                response_deserializer=loan__pb2.createLoanResponse.FromString,
                )
        self.show_repayments = channel.unary_unary(
                '/QuikLoaner/show_repayments',
                request_serializer=loan__pb2.showRepaymentRequest.SerializeToString,
                response_deserializer=loan__pb2.showRepaymentResponse.FromString,
                )
        self.make_repayment = channel.unary_unary(
                '/QuikLoaner/make_repayment',
                request_serializer=loan__pb2.makeRepaymentRequest.SerializeToString,
                response_deserializer=loan__pb2.makeRepaymentResponse.FromString,
                )


class QuikLoanerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def save_loan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def show_repayments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def make_repayment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_QuikLoanerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'save_loan': grpc.unary_unary_rpc_method_handler(
                    servicer.save_loan,
                    request_deserializer=loan__pb2.createLoanRequest.FromString,
                    response_serializer=loan__pb2.createLoanResponse.SerializeToString,
            ),
            'show_repayments': grpc.unary_unary_rpc_method_handler(
                    servicer.show_repayments,
                    request_deserializer=loan__pb2.showRepaymentRequest.FromString,
                    response_serializer=loan__pb2.showRepaymentResponse.SerializeToString,
            ),
            'make_repayment': grpc.unary_unary_rpc_method_handler(
                    servicer.make_repayment,
                    request_deserializer=loan__pb2.makeRepaymentRequest.FromString,
                    response_serializer=loan__pb2.makeRepaymentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'QuikLoaner', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class QuikLoaner(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def save_loan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/QuikLoaner/save_loan',
            loan__pb2.createLoanRequest.SerializeToString,
            loan__pb2.createLoanResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def show_repayments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/QuikLoaner/show_repayments',
            loan__pb2.showRepaymentRequest.SerializeToString,
            loan__pb2.showRepaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def make_repayment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/QuikLoaner/make_repayment',
            loan__pb2.makeRepaymentRequest.SerializeToString,
            loan__pb2.makeRepaymentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
